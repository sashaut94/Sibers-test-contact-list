{"version":3,"sources":["components/SearchInput/SearchInput.module.scss","components/ContactCard/ContactOption/ContactOption.module.scss","components/FavouriteButton/FavouriteButton.module.scss","components/Header/Header.module.scss","components/Button/Button.module.scss","components/ContactForm/ContactForm.module.scss","containers/ContactsBook/ContactsBook.module.scss","components/Input/Input.module.scss","components/TableCell/TableCell.module.scss","components/PaginationList/PaginationList.module.scss","components/BackDrop/BackDrop.module.scss","components/ContactCard/ContactCard.module.scss","components/ContactCard/Avatar/Avatar.module.scss","components/RemoveButton/RemoveButton.module.scss","components/ContactsList/ContactsList.module.scss","components/PerPage/PerPage.module.scss","store/actionsTypes.js","functions.js","store/actionCreator.js","components/Button/Button.js","components/SearchInput/SearchInput.js","components/PerPage/PerPage.js","components/Header/Header.js","components/PaginationList/PaginationList.js","components/BackDrop/BackDrop.js","components/Input/Input.js","components/ContactForm/ContactForm.js","components/TableCell/TableCell.js","components/ContactCard/Avatar/Avatar.js","components/ContactCard/ContactOption/ContactOption.js","components/ContactCard/ContactInfo/ContactInfo.js","components/ContactCard/Address/Address.js","components/ContactCard/Phone/Phone.js","components/ContactCard/Company/Company.js","components/RemoveButton/RemoveButton.js","components/FavouriteButton/FavouriteButton.js","components/ContactButtons/ContactButtons.js","components/ContactCard/ContactCard.js","components/ContactsList/ContactsList.js","containers/ContactsBook/ContactsBook.js","App.js","reportWebVitals.js","store/reducer.js","index.js"],"names":["module","exports","SET_CONTACTS","SET_CURRENT_PAGE","SET_TYPE_OF_CONTACTS","SET_FORM_STATE","SET_FORM_CONTROLS","SET_EDITABLE_CONTACT_ID","SET_SEARCH","SET_PER_PAGE_STATE","SET_PER_PAGE_AMOUNT","labels","fillFormControls","map","label","index","id","value","getRandom","min","max","Math","floor","random","avatars","setContacts","contacts","type","updateContacts","item","dispatch","localStorage","setItem","JSON","stringify","setCurrentPage","number","setFormState","state","setFormControls","controls","setEditableContactId","Button","props","cls","classes","block","push","active","className","join","onClick","disabled","children","connect","search","setSearch","SearchInput","wrapper","magnifier","button","icon","faSearch","input","placeholder","onChange","e","target","times","faTimes","perPages","perPage","amountPerPage","setPerPageState","setPerPageAmount","ref","useRef","condition","fn","useEffect","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","useOutsideAlerter","PerPage","text","faChevronDown","arrow","open","CSSTransition","in","timeout","classNames","mountOnEnter","unmountOnExit","dropdown","list","buttons","typeOfContacts","setTypeOfContacts","payload","Header","isActive","found","amount","faPlus","addButton","currentPage","window","scrollTo","top","behavior","pagination","ceil","i","PaginationList","numbers","faArrowRight","clearFormControls","BackDrop","stopPropagation","setTimeout","formControls","changeInput","newControls","newControl","Input","editableContactId","editContact","newContacts","parse","getItem","find","contact","indexOf","company","address","avatar","length","name","ContactForm","title","form","action","control","TableCell","header","Avatar","image","width","height","src","alt","ContactOption","description","isLink","href","email","phone","link","options","ContactInfo","option","Address","Phone","Company","removeContact","filter","faTrashAlt","toggleFavourite","newCurrent","favorite","FavouriteButton","favourite","fasStar","notFavourite","common","farStar","gold","ContactButtons","fillFormControlsFromCard","ContactCard","username","city","zipcode","ContactsList","TransitionGroup","component","noContacts","isForm","fetchContacts","a","contactsFromStorage","axios","get","response","contactsWithAvatar","data","console","log","contactsPerPage","some","toLowerCase","includes","slice","ContactsBook","inner","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","loading","error","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","StrictMode","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.05cf0fc9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchInput\":\"SearchInput_SearchInput__2TIJE\",\"wrapper\":\"SearchInput_wrapper__1CLej\",\"input\":\"SearchInput_input__3e0KX\",\"button\":\"SearchInput_button__1jPlX\",\"times\":\"SearchInput_times__2Wvz7\",\"magnifier\":\"SearchInput_magnifier__3e_CL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactOption\":\"ContactOption_ContactOption__1UpJ6\",\"description\":\"ContactOption_description__2fFWd\",\"phone\":\"ContactOption_phone__3_SNJ\",\"company\":\"ContactOption_company__dWjo1\",\"link\":\"ContactOption_link__2Af5A\",\"text\":\"ContactOption_text__2QrRd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FavouriteButton\":\"FavouriteButton_FavouriteButton__3OR5L\",\"favourite\":\"FavouriteButton_favourite__jMWTS\",\"notFavourite\":\"FavouriteButton_notFavourite__3HZEf\",\"common\":\"FavouriteButton_common__16coJ\",\"gold\":\"FavouriteButton_gold__2HDuO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2psce\",\"found\":\"Header_found__1Lvxb\",\"buttons\":\"Header_buttons__1TMqQ\",\"addButton\":\"Header_addButton__2FT7F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2h7F-\",\"roundLeft\":\"Button_roundLeft__3SOaO\",\"roundRight\":\"Button_roundRight__1suRm\",\"active\":\"Button_active__TOg3a\",\"oval\":\"Button_oval__352G7\",\"addContact\":\"Button_addContact__Y1I5i\",\"pagination\":\"Button_pagination__15XUA\",\"form\":\"Button_form__3HAXn\",\"nextPage\":\"Button_nextPage__2-JGt\",\"perPage\":\"Button_perPage__3-lIC\",\"begin\":\"Button_begin__B6ngc\",\"end\":\"Button_end__25g9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__1rciW\",\"title\":\"ContactForm_title__2lOrN\",\"text\":\"ContactForm_text__3DJ7j\",\"form\":\"ContactForm_form__36fy_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactsBook\":\"ContactsBook_ContactsBook__1wqih\",\"inner\":\"ContactsBook_inner__1FeZS\",\"title\":\"ContactsBook_title__2JlZS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2q7wR\",\"label\":\"Input_label__3-3Ew\",\"input\":\"Input_input__23ER3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TableCell\":\"TableCell_TableCell__33HnI\",\"avatar\":\"TableCell_avatar__1bz-T\",\"contactInfo\":\"TableCell_contactInfo__MnJku\",\"address\":\"TableCell_address__12sNk\",\"company\":\"TableCell_company__2AQe1\",\"phone\":\"TableCell_phone__2XcBu\",\"buttons\":\"TableCell_buttons__2ucnj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PaginationList\":\"PaginationList_PaginationList__frulU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"BackDrop_BackDrop__rWFI3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactCard\":\"ContactCard_ContactCard__2sbey\",\"buttons\":\"ContactCard_buttons__3rCTp\",\"button\":\"ContactCard_button__2e8Fp\",\"icon\":\"ContactCard_icon__1X1TL\",\"info\":\"ContactCard_info__NUA2k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"Avatar_image__1H9CK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"RemoveButton_button__3GAEl\",\"shake\":\"RemoveButton_shake__21-qo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noContacts\":\"ContactsList_noContacts__3URvQ\",\"list\":\"ContactsList_list__2SwWT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PerPage\":\"PerPage_PerPage__2VO3r\",\"wrapper\":\"PerPage_wrapper__r2GDw\",\"arrow\":\"PerPage_arrow__17cfr\",\"open\":\"PerPage_open__24UK0\",\"text\":\"PerPage_text__2R9IL\",\"dropdown\":\"PerPage_dropdown__3Awhl\",\"list\":\"PerPage_list__3PyBK\",\"active\":\"PerPage_active__3Sk4X\",\"item\":\"PerPage_item__23bSF\"};","export const SET_CONTACTS = 'SET_CONTACTS'\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\nexport const SET_TYPE_OF_CONTACTS = 'SET_TYPE_OF_CONTACTS'\nexport const SET_FORM_STATE = 'SET_FORM_STATE'\nexport const SET_FORM_CONTROLS = 'SET_FORM_CONTROLS'\nexport const SET_EDITABLE_CONTACT_ID = 'SET_EDITABLE_CONTACT_ID'\nexport const SET_SEARCH = 'SET_SEARCH'\nexport const SET_PER_PAGE_STATE = 'SET_PER_PAGE_STATE'\nexport const SET_PER_PAGE_AMOUNT = 'SET_PER_PAGE_AMOUNT'","const labels = ['username', 'name', 'email', 'city', 'state', 'zipcode', 'company', 'phone']\n\nexport function fillFormControls() {\n  return labels.map((label, index) => ({\n    id: index + 1,\n    label: label,\n    value: ''\n  }))\n}\n\nexport const getRandom = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min","import {\n  SET_CONTACTS,\n  SET_CURRENT_PAGE,\n  SET_EDITABLE_CONTACT_ID,\n  SET_FORM_CONTROLS,\n  SET_FORM_STATE,\n  SET_TYPE_OF_CONTACTS,\n  SET_SEARCH,\n  SET_PER_PAGE_STATE,\n  SET_PER_PAGE_AMOUNT\n} from './actionsTypes'\nimport axios from 'axios'\nimport {fillFormControls, getRandom} from '../functions'\n\nconst avatars = [\n  // eslint-disable-next-line no-useless-escape\n  \"https:\\/\\/i.imgur.com\\/pYCekqv.jpg\",\n  // eslint-disable-next-line no-useless-escape\n  \"https:\\/\\/uifaces.co\\/our-content\\/donated\\/wEMibhpA.jpg\",\n  // eslint-disable-next-line no-useless-escape\n  \"https:\\/\\/images.pexels.com\\/photos\\/432580\\/pexels-photo-432580.jpeg?crop=faces&fit=crop&h=200&w=200&auto=compress&cs=tinysrgb\",\n  // eslint-disable-next-line no-useless-escape\n  \"https:\\/\\/images.unsplash.com\\/photo-1557296387-5358ad7997bb?ixlib=rb-1.2.1&q=80&fm=jpg&crop=faces&fit=crop&h=200&w=200&ixid=eyJhcHBfaWQiOjE3Nzg0fQ\",\n  // eslint-disable-next-line no-useless-escape\n  \"https:\\/\\/images.generated.photos\\/fJ8DTPRAgWaRYMOHqYnEsXuJWOvG052PYY7wiIoB4Jg\\/rs:fit:512:512\\/czM6Ly9pY29uczgu\\/Z3Bob3Rvcy1wcm9k\\/LnBob3Rvcy92M18w\\/Mjc4MjkwLmpwZw.jpg\",\n  // eslint-disable-next-line no-useless-escape\n  \"https:\\/\\/randomuser.me\\/api\\/portraits\\/women\\/16.jpg\",\n  // eslint-disable-next-line no-useless-escape\n  \"https:\\/\\/uifaces.co\\/our-content\\/donated\\/UCIrofcA.jpg\",\n  // eslint-disable-next-line no-useless-escape\n  \"https:\\/\\/images.generated.photos\\/60sv5-LVG7C0MoWNy9_tlAPTrO7_D51bT9By6ljIscg\\/rs:fit:512:512\\/czM6Ly9pY29uczgu\\/Z3Bob3Rvcy1wcm9k\\/LnBob3Rvcy92M18w\\/MTY0MjYyLmpwZw.jpg\",\n  // eslint-disable-next-line no-useless-escape\n  \"https:\\/\\/images.generated.photos\\/ope_mySxrArKmYZ-husaCGy-cn6x9I4QZ3gsatsNYwc\\/rs:fit:512:512\\/czM6Ly9pY29uczgu\\/Z3Bob3Rvcy1wcm9k\\/LnBob3Rvcy92M18w\\/ODI0NjMyLmpwZw.jpg\",\n  // eslint-disable-next-line no-useless-escape\n  \"https:\\/\\/uifaces.co\\/our-content\\/donated\\/oLkb60i_.jpg\",\n  // eslint-disable-next-line no-useless-escape\n  \"https:\\/\\/images.unsplash.com\\/photo-1509380836717-c4320ccf1a6f?ixlib=rb-0.3.5&q=80&fm=jpg&crop=faces&fit=crop&h=200&w=200&s=e01c8c45a063daaf6d6e571a32bd6c90\",\n  // eslint-disable-next-line no-useless-escape\n  \"https:\\/\\/uifaces.co\\/our-content\\/donated\\/9CoYihJ4.jpg\",\n  // eslint-disable-next-line no-useless-escape\n  \"https:\\/\\/images.generated.photos\\/s8zU0sgzLArBQIwwciNvkiJ_ktS9CrrXyBhwrHC4oiE\\/rs:fit:512:512\\/czM6Ly9pY29uczgu\\/Z3Bob3Rvcy1wcm9k\\/LnBob3Rvcy92M18w\\/MDUwNjE0LmpwZw.jpg\",\n  // eslint-disable-next-line no-useless-escape\n  \"https:\\/\\/images.generated.photos\\/HeRTU31T6rqkZhQ6JHQUL6BQhYiJ9gu03MeR5R9M_3E\\/rs:fit:512:512\\/czM6Ly9pY29uczgu\\/Z3Bob3Rvcy1wcm9k\\/LnBob3Rvcy92M18w\\/NTE2Nzc1LmpwZw.jpg\",\n  // eslint-disable-next-line no-useless-escape\n  \"https:\\/\\/i.imgur.com\\/8i14Q3Y.jpg\"\n]\n\nexport function setContacts(contacts) {\n  return {\n    type: SET_CONTACTS,\n    contacts\n  }\n}\n\nexport function fetchContacts() {\n  return async dispatch => {\n    const contactsFromStorage = localStorage.getItem('contacts')\n    if (contactsFromStorage) {\n      const contacts = JSON.parse(contactsFromStorage)\n      dispatch(setContacts(contacts))\n    } else {\n      try {\n        const response = await axios.get('https://demo.sibers.com/users')\n        const contactsWithAvatar = response.data.map(item => ({\n          ...item,\n          avatar: avatars[getRandom(0, 14)]\n        }))\n        dispatch(updateContacts(contactsWithAvatar))\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n}\n\nexport function toggleFavourite(contacts, id) {\n  return dispatch => {\n    const newContacts = [...contacts]\n    const current = newContacts.find(item => item.id === id)\n    const index = contacts.indexOf(current)\n    const newCurrent = {...current}\n    newCurrent.favorite = !newCurrent.favorite\n    newContacts[index] = newCurrent\n    dispatch(updateContacts(newContacts))\n  }\n}\n\nexport function removeContact(contacts, id) {\n  return dispatch => {\n    const newContacts = contacts.filter(contact => contact.id !== id)\n    dispatch(updateContacts(newContacts))\n  }\n}\n\nexport function updateContacts(item) {\n  return dispatch => {\n    localStorage.setItem('contacts', JSON.stringify(item))\n    dispatch(setContacts(item))\n  }\n}\n\nexport function setCurrentPage(number) {\n  return {\n    type: SET_CURRENT_PAGE,\n    number\n  }\n}\n\nexport function setTypeOfContacts(type) {\n  return {\n    type: SET_TYPE_OF_CONTACTS,\n    payload: type\n  }\n}\n\nexport function setFormState(state) {\n  return {\n    type: SET_FORM_STATE,\n    state\n  }\n}\n\nexport function setFormControls(controls) {\n  return {\n    type: SET_FORM_CONTROLS,\n    controls\n  }\n}\n\nexport function changeInput(e, controls, index) {\n  return dispatch => {\n    const newControls = [...controls]\n    const newControl = {...newControls[index]}\n    newControl.value = e.target.value\n    newControls[index] = newControl\n    dispatch(setFormControls(newControls))\n  }\n}\n\nexport function fillFormControlsFromCard(controls, contact) {\n  return dispatch => {\n    const newControls = [...controls]\n    for (let i = 0; i < controls.length; i++) {\n      const newControl = {...newControls[i]}\n      newControl.value = contact[newControl.label]\n      newControls[i] = newControl\n    }\n    dispatch(setFormControls(newControls))\n    dispatch(setEditableContactId(contact.id))\n    dispatch(setFormState(true))\n  }\n}\n\nexport function setEditableContactId(id) {\n  return {\n    type: SET_EDITABLE_CONTACT_ID,\n    id\n  }\n}\n\nexport function editContact(controls, id) {\n  return dispatch => {\n    let current, index\n    const newContacts = JSON.parse(localStorage.getItem('contacts'))\n    if (id !== null) {\n      current = newContacts.find(contact => contact.id === id)\n      index = newContacts.indexOf(current)\n    } else {\n      current = {}\n      current.company = {}\n      current.address = {}\n      current.avatar = avatars[getRandom(0, 14)]\n      index = newContacts.length\n      current.id = index\n    }\n    for (let i = 0; i < controls.length; i++) {\n      if (controls[i].label !== 'company' && controls[i].label !== 'city' && controls[i].label !== 'state' && controls[i].label !== 'zipcode') {\n        current[controls[i].label] = controls[i].value\n      } else {\n        if (controls[i].label === 'company') {\n          current['company'].name = controls[i].value\n        } else {\n          current['address'][controls[i].label] = controls[i].value\n        }\n      }\n    }\n    newContacts[index] = current\n    dispatch(updateContacts(newContacts))\n    dispatch(setFormState(false))\n  }\n}\n\nexport function clearFormControls() {\n  return dispatch => {\n    const newControls = fillFormControls()\n    dispatch(setFormControls(newControls))\n    dispatch(setEditableContactId(null))\n  }\n}\n\nexport function setSearch(value) {\n  return {\n    type: SET_SEARCH,\n    value\n  }\n}\n\nexport function setPerPageState(state) {\n  return {\n    type: SET_PER_PAGE_STATE,\n    state: !state\n  }\n}\n\nexport function setPerPageAmount(number) {\n  return {\n    type: SET_PER_PAGE_AMOUNT,\n    number\n  }\n}","import React from 'react'\nimport classes from './Button.module.scss'\n\nexport const Button = props => {\n  const cls = [classes.Button]\n  if (props.block) cls.push(classes[props.block])\n  if (props.type) cls.push(classes[props.type])\n  if (props.active) cls.push(classes.active)\n  return (\n    <button\n      className={cls.join(' ')}\n      type='button'\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  )\n}","import React from 'react'\nimport classes from './SearchInput.module.scss'\nimport {connect} from 'react-redux'\nimport {faTimes, faSearch} from '@fortawesome/free-solid-svg-icons'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {setCurrentPage, setSearch} from '../../store/actionCreator'\n\nconst SearchInput = props => {\n  return (\n    <div className={classes.SearchInput}>\n      <p className={classes.wrapper}>\n        <button\n          className={`${classes.magnifier} ${classes.button}`}\n          disabled\n        >\n          <FontAwesomeIcon icon={faSearch}/>\n        </button>\n\n        <input\n          className={classes.input}\n          type=\"text\"\n          placeholder='Search contacts...'\n          value={props.search}\n          onChange={e => {\n            props.setSearch(e.target.value)\n            props.setCurrentPage(1)\n          }}\n        />\n\n        <button\n          className={`${classes.times} ${classes.button}`}\n          onClick={() => props.setSearch('')}\n          disabled={props.search === ''}\n        >\n          <FontAwesomeIcon icon={faTimes}/>\n        </button>\n      </p>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setSearch: (value) => dispatch(setSearch(value)),\n    setCurrentPage: (number) => dispatch(setCurrentPage(number))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchInput)","import React, {useEffect, useRef} from 'react'\nimport classes from './PerPage.module.scss'\nimport {faChevronDown} from '@fortawesome/free-solid-svg-icons'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {connect} from 'react-redux'\nimport {setCurrentPage, setPerPageAmount, setPerPageState} from '../../store/actionCreator'\nimport {Button} from '../Button/Button'\nimport {CSSTransition} from 'react-transition-group'\n\nconst perPages = [3, 6, 9, 12]\n\nfunction useOutsideAlerter(ref, condition, fn) {\n  useEffect(() => {\n    if (condition) {\n      function handleClickOutside(event) {\n        if (ref.current && !ref.current.contains(event.target)) {\n          fn(true)\n        }\n      }\n\n      document.addEventListener(\"mousedown\", handleClickOutside)\n      return () => {\n        document.removeEventListener(\"mousedown\", handleClickOutside)\n      }\n    }\n  }, [ref, condition, fn])\n}\n\nconst PerPage = props => {\n  const ref = useRef(null)\n  useOutsideAlerter(ref, props.perPage, props.setPerPageState)\n  return (\n    <div className={classes.PerPage}>\n      <span className={classes.text}>\n        Per page\n      </span>\n      <div className={classes.wrapper} ref={ref}>\n        <Button\n          type='perPage'\n          onClick={() => props.setPerPageState(props.perPage)}\n        >\n          {props.amountPerPage}\n          <FontAwesomeIcon icon={faChevronDown}\n                           className={`${classes.arrow} ${props.perPage ? classes.open : null}`}/>\n        </Button>\n\n        <CSSTransition\n          in={props.perPage}\n          timeout={1000}\n          classNames='dropdown'\n          mountOnEnter\n          unmountOnExit\n        >\n          <div className={classes.dropdown}>\n            <ul className={classes.list}>\n              {\n                perPages.map(perPage => (\n                  <li\n                    key={perPage}\n                    className={`${classes.item} ${props.amountPerPage === perPage ? classes.active : null}`}\n                    onClick={() => {\n                      props.setPerPageAmount(perPage)\n                      props.setPerPageState(true)\n                      props.setCurrentPage(1)\n                    }}\n                  >\n                    {perPage}\n                  </li>\n                ))\n              }\n            </ul>\n          </div>\n        </CSSTransition>\n      </div>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    perPage: state.perPage,\n    amountPerPage: state.amountPerPage\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setPerPageState: (state) => dispatch(setPerPageState(state)),\n    setPerPageAmount: (number) => dispatch(setPerPageAmount(number)),\n    setCurrentPage: (number) => dispatch(setCurrentPage(number))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PerPage)","import React from 'react'\nimport classes from './Header.module.scss'\nimport {Button} from '../Button/Button'\nimport {connect} from 'react-redux'\nimport {setCurrentPage, setFormState, setTypeOfContacts} from '../../store/actionCreator'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faPlus} from '@fortawesome/free-solid-svg-icons'\nimport SearchInput from \"../SearchInput/SearchInput\"\nimport PerPage from '../PerPage/PerPage'\n\nconst buttons = [\n  {id: 1, type: 'roundLeft', value: 'All contacts'},\n  {id: 2, type: 'roundRight', value: 'Favorites'}\n]\n\nconst Header = props => {\n  return (\n    <header className={classes.Header}>\n      <SearchInput/>\n\n      <div className={classes.buttons}>\n        {\n          buttons.map(button => {\n            const isActive = props.typeOfContacts === button.value\n            return (\n              <Button\n                key={button.id}\n                type={button.type}\n                active={isActive}\n                onClick={() => {\n                  props.setTypeOfContacts(button.value)\n                  props.setCurrentPage(1)\n                }}\n                disabled={isActive}\n              >\n                {\n                  button.value\n                }\n              </Button>\n            )\n          })\n        }\n      </div>\n\n      <p className={classes.found}>Found {props.amount} contacts </p>\n\n      <Button\n        type='addContact'\n        onClick={() => props.setFormState(true)}\n      >\n        <FontAwesomeIcon icon={faPlus}/>\n        <span className={classes.addButton}>\n         Add contact\n        </span>\n      </Button>\n\n      <PerPage/>\n    </header>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    contacts: state.contacts,\n    typeOfContacts: state.typeOfContacts\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setTypeOfContacts: (type) => dispatch(setTypeOfContacts(type)),\n    setFormState: (state) => dispatch(setFormState(state)),\n    setCurrentPage: (number) => dispatch(setCurrentPage(number))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)","import React from 'react'\nimport classes from './PaginationList.module.scss'\nimport {connect} from 'react-redux'\nimport {Button} from '../Button/Button'\nimport {setCurrentPage} from '../../store/actionCreator'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faArrowRight} from '@fortawesome/free-solid-svg-icons'\n\nconst PaginationList = props => {\n  const pagination = []\n  const amount = Math.ceil(props.amount / props.amountPerPage)\n  for (let i = props.currentPage - 2; i < props.currentPage + 3; i++) {\n    if (i > 0 && i < amount + 1) pagination.push(i)\n  }\n  return (\n    <div className={classes.PaginationList}>\n      {\n        props.currentPage !== 1 && <Button\n          type='oval'\n          block='begin'\n          onClick={() => props.setCurrentPage(1)}\n        >\n          To the begin\n        </Button>\n      }\n\n      <div className={classes.numbers}>\n        {\n          pagination.map((number, index) => {\n            return <Button\n              block='pagination'\n              key={index}\n              active={props.currentPage === number}\n              disabled={props.currentPage === number}\n              type={(number === 1 || number === props.currentPage - 2) ? 'roundLeft' : number === amount && props.currentPage === amount ? 'roundRight' : null}\n              onClick={() => {\n                props.setCurrentPage(number)\n              }}\n            >\n              {number}\n            </Button>\n          })\n        }\n\n        {\n          props.currentPage !== amount && <Button\n            type='roundRight'\n            block='nextPage'\n            onClick={() => props.setCurrentPage(props.currentPage + 1)}\n          >\n            <FontAwesomeIcon icon={faArrowRight}/>\n          </Button>\n        }\n      </div>\n\n      {\n        props.currentPage !== amount && <Button\n          type='oval'\n          block='end'\n          onClick={() => props.setCurrentPage(amount)}\n        >\n          To the end\n        </Button>\n      }\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    amountPerPage: state.amountPerPage,\n    currentPage: state.currentPage\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setCurrentPage: number => {\n      dispatch(setCurrentPage(number))\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      })\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PaginationList)","import React from 'react'\nimport classes from './BackDrop.module.scss'\nimport {connect} from 'react-redux'\nimport {clearFormControls, setFormState} from '../../store/actionCreator'\n\nconst BackDrop = props => {\n  return (\n    <div\n      className={classes.BackDrop}\n      onClick={(e) => {\n        e.stopPropagation()\n        props.setFormState(false)\n        setTimeout(() => props.clearFormControls(), 1000)\n      }}\n    />\n  )\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setFormState: (state) => dispatch(setFormState(state)),\n    clearFormControls: () => dispatch(clearFormControls())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(BackDrop)","import React from 'react'\nimport classes from './Input.module.scss'\nimport {connect} from 'react-redux'\nimport {changeInput} from '../../store/actionCreator'\n\nconst Input = props => {\n  return (\n    <div className={classes.Input}>\n      <p className={classes.label}>\n        {props.label}\n      </p>\n\n      <input\n        className={classes.input}\n        type=\"text\"\n        placeholder={props.placeholder}\n        value={props.value}\n        onChange={(e) => props.changeInput(e, props.formControls, props.index)}\n      />\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    formControls: state.formControls\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeInput: (e, controls, index) => dispatch(changeInput(e, controls, index))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Input)","import React from 'react'\nimport classes from './ContactForm.module.scss'\nimport {connect} from 'react-redux'\nimport Input from '../Input/Input'\nimport {Button} from '../Button/Button'\nimport {editContact, setFormState} from '../../store/actionCreator'\n\nconst ContactForm = props => {\n  return (\n    <section className={classes.ContactForm}>\n      <h2 className={classes.title}>\n        Contact\n      </h2>\n\n      <p className={classes.text}>\n        {\n          props.editableContactId !== null\n            ? 'Edit contact information'\n            : 'Create contact'\n        }\n      </p>\n\n      <form className={classes.form} action=\"#\">\n        {\n          props.formControls.map((control, index) => (\n            <Input\n              key={control.id}\n              label={control.label}\n              placeholder={`Enter ${control.label}`}\n              value={control.value}\n              index={index}\n            />\n          ))\n        }\n\n        <Button\n          type='oval'\n          active\n          block='form'\n          onClick={() => {\n            props.editContact(props.formControls, props.editableContactId)\n          }}\n        >\n          Save changes\n        </Button>\n      </form>\n    </section>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    formControls: state.formControls,\n    editableContactId: state.editableContactId,\n    currentPage: state.currentPage,\n    amountPerPage: state.amountPerPage\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    editContact: (controls, id) => dispatch(editContact(controls, id)),\n    setFormState: (state) => dispatch(setFormState(state)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm)","import React from 'react'\nimport classes from './TableCell.module.scss'\n\nexport const TableCell = props => {\n  const cls = [classes.TableCell]\n  if (props.block) cls.push(classes[props.block])\n  return (\n    <div className={cls.join(' ')}>\n      {props.header\n        ? <p className={classes.header}>\n          {props.header}\n        </p>\n        : <>\n          {props.children}\n        </>\n      }\n    </div>\n  )\n}","import React from 'react'\nimport classes from './Avatar.module.scss'\nimport {TableCell} from '../../TableCell/TableCell'\n\nexport const Avatar = props => {\n  return (\n    <TableCell block='avatar'>\n      <img\n        className={classes.image}\n        width={150}\n        height={150}\n        src={props.avatar}\n        alt=\"avatar\"\n      />\n    </TableCell>\n  )\n}","import React from 'react'\nimport classes from './ContactOption.module.scss'\n\nexport const ContactOption = props => {\n  const cls = [classes.ContactOption]\n  if (props.type) cls.push(classes[props.type])\n  return (\n    <p className={cls.join(' ')}>\n      <span className={classes.description}>\n        {props.description}\n      </span>\n      {\n        props.isLink\n          ? <a href={props.email\n          ? `mailto:${props.email}`\n          : `tel:${props.phone}`}\n               className={classes.link}>\n            {props.email || props.phone}\n          </a>\n          : <span className={classes.text}>\n            {\n              props.text\n\n            }\n            </span>\n      }\n    </p>\n  )\n}","import React from 'react'\nimport {ContactOption} from '../ContactOption/ContactOption'\nimport {TableCell} from '../../TableCell/TableCell'\n\nconst options = [\n  {id: 1, text: 'username'},\n  {id: 2, text: 'name'},\n  {id: 3, text: 'email', isLink: true}\n]\n\nexport const ContactInfo = props => {\n  return (\n    <TableCell block='contactInfo'>\n      {\n        options.map(option => (\n          <ContactOption\n            key={option.id}\n            description={option.text}\n            text={props[option.text]}\n            email={props.email}\n            isLink={option.isLink}\n          />\n        ))\n      }\n    </TableCell>\n  )\n}","import React from 'react'\nimport {ContactOption} from '../ContactOption/ContactOption'\nimport {TableCell} from '../../TableCell/TableCell'\n\nconst options = [\n  {id: 1, text: 'city'},\n  {id: 2, text: 'state'},\n  {id: 3, text: 'zipcode'},\n]\n\nexport const Address = props => {\n  return (\n    <TableCell block='address'>\n      {\n        options.map(option => (\n          <ContactOption\n            key={option.id}\n            description={option.text}\n            text={props[option.text]}\n          />\n        ))\n      }\n    </TableCell>\n  )\n}","import React from 'react'\nimport {ContactOption} from '../ContactOption/ContactOption'\nimport {TableCell} from '../../TableCell/TableCell'\n\nexport const Phone = props => {\n  return (\n    <TableCell block='phone'>\n      <ContactOption\n        description='Phone'\n        phone={props.phone}\n        type='phone'\n        isLink\n      />\n    </TableCell>\n  )\n}","import React from 'react'\nimport {ContactOption} from '../ContactOption/ContactOption'\nimport {TableCell} from '../../TableCell/TableCell'\n\nexport const Company = props => {\n  return (\n    <TableCell block='company'>\n      <ContactOption\n        description='company'\n        text={props.company}\n        type='company'\n      />\n    </TableCell>\n  )\n}","import React from 'react'\nimport classes from './RemoveButton.module.scss'\nimport {faTrashAlt} from '@fortawesome/free-solid-svg-icons/faTrashAlt'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {connect} from 'react-redux'\nimport {removeContact} from '../../store/actionCreator'\n\nconst RemoveButton = props => {\n  return (\n    <button\n      className={classes.button}\n      onClick={(e) => {\n        e.stopPropagation()\n        props.removeContact(props.contacts, props.id)\n      }}\n    >\n      <FontAwesomeIcon icon={faTrashAlt}/>\n    </button>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    contacts: state.contacts,\n    currentPage: state.currentPage,\n    amountPerPage: state.amountPerPage\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    removeContact: (contacts, id) => dispatch(removeContact(contacts, id))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RemoveButton)","import React from 'react'\nimport classes from './FavouriteButton.module.scss'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faStar as farStar} from '@fortawesome/free-regular-svg-icons'\nimport {faStar as fasStar} from '@fortawesome/free-solid-svg-icons'\nimport {connect} from 'react-redux'\nimport {toggleFavourite} from '../../store/actionCreator'\n\nconst FavouriteButton = props => {\n  const cls = [classes.FavouriteButton]\n  if (props.favorite) cls.push(classes.favourite)\n  return (\n    <button\n      className={cls.join(' ')}\n      onClick={(e) => {\n        e.stopPropagation()\n        props.toggleFavourite(props.contacts, props.id)\n      }}\n    >\n      {\n        props.favorite\n          ? <FontAwesomeIcon icon={fasStar}/>\n          : <p className={classes.notFavourite}>\n            <span className={classes.common}>\n              <FontAwesomeIcon icon={farStar}/>\n            </span>\n\n            <span className={classes.gold}>\n              <FontAwesomeIcon icon={fasStar}/>\n            </span>\n          </p>\n      }\n    </button>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    contacts: state.contacts\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    toggleFavourite: (contacts, id) => dispatch(toggleFavourite(contacts, id))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FavouriteButton)","import React from 'react'\nimport RemoveButton from '../RemoveButton/RemoveButton'\nimport {TableCell} from '../TableCell/TableCell'\nimport FavouriteButton from '../FavouriteButton/FavouriteButton'\n\nexport const ContactButtons = props => (\n  <TableCell block='buttons'>\n    <RemoveButton id={props.id}/>\n\n    <FavouriteButton\n      favorite={props.favorite}\n      id={props.id}\n    />\n  </TableCell>\n)","import React from 'react'\nimport classes from './ContactCard.module.scss'\nimport {Avatar} from './Avatar/Avatar'\nimport {ContactInfo} from './ContactInfo/ContactInfo'\nimport {Address} from './Address/Address'\nimport {Phone} from './Phone/Phone'\nimport {Company} from './Company/Company'\nimport {ContactButtons} from '../ContactButtons/ContactButtons'\nimport {connect} from 'react-redux'\nimport {fillFormControlsFromCard} from '../../store/actionCreator'\n\nconst ContactCard = props => {\n  return (\n    <article\n      className={classes.ContactCard}\n      onClick={() => {\n        props.fillFormControlsFromCard(props.formControls, props)\n      }}\n    >\n      <Avatar avatar={props.avatar}/>\n\n      <ContactInfo\n        username={props.username}\n        name={props.name}\n        email={props.email}\n      />\n\n      <Address\n        city={props.city}\n        state={props.state}\n        zipcode={props.zipcode}\n      />\n\n      <Company\n        company={props.company}\n      />\n\n      <Phone phone={props.phone}/>\n\n      <ContactButtons\n        favorite={props.favorite}\n        id={props.id}\n      />\n    </article>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    formControls: state.formControls\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fillFormControlsFromCard: (controls, contact) => dispatch(fillFormControlsFromCard(controls, contact))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactCard)","import React from 'react'\nimport ContactCard from '../ContactCard/ContactCard'\nimport classes from './ContactsList.module.scss'\nimport {CSSTransition, TransitionGroup} from 'react-transition-group'\n\nexport const ContactsList = props => {\n  return props.contacts.length ?\n    <TransitionGroup component='div'>\n      {props.contacts.map(contact => {\n        const {city, state, zipcode} = contact.address\n        return <CSSTransition\n          key={contact.id}\n          classNames='swipe'\n          timeout={1000}\n        >\n          <ContactCard\n            key={contact.id}\n            id={contact.id}\n            avatar={contact.avatar}\n            username={contact.username}\n            name={contact.name}\n            email={contact.email}\n            city={city}\n            state={state}\n            zipcode={zipcode}\n            phone={contact.phone}\n            company={contact.company.name}\n            favorite={contact.favorite}\n          />\n        </CSSTransition>\n      })}\n    </TransitionGroup>\n    :\n    <div className={classes.noContacts}>\n      There are no such contacts\n    </div>\n}","import React, {useEffect} from 'react'\nimport classes from './ContactsBook.module.scss'\nimport {connect} from 'react-redux'\nimport {fetchContacts, setCurrentPage} from '../../store/actionCreator'\nimport Header from '../../components/Header/Header'\nimport PaginationList from '../../components/PaginationList/PaginationList'\nimport BackDrop from '../../components/BackDrop/BackDrop'\nimport ContactForm from '../../components/ContactForm/ContactForm'\nimport {CSSTransition} from 'react-transition-group'\nimport {ContactsList} from '../../components/ContactsList/ContactsList'\n\nconst ContactsBook = props => {\n  const {fetchContacts} = props\n\n  useEffect(() => {\n    fetchContacts()\n  }, [fetchContacts])\n\n  let contacts = []\n  let contactsPerPage = []\n\n  if (props.contacts.length) {\n    if (props.search) {\n      contacts = props.contacts.filter(contact => {\n        const {username, name, email, phone, company: {name: company}, address: {city, state, zipcode}} = contact\n        const values = [username, name, email, phone, company, city, state, zipcode]\n        return values.some(item => item.toLowerCase().includes(props.search.toLowerCase())) ? contact : null\n      })\n    } else {\n      contacts = props.contacts\n    }\n    if (props.typeOfContacts === 'Favorites') {\n      contacts = contacts.filter(item => item.favorite)\n    }\n    contactsPerPage = contacts.slice(props.amountPerPage * (props.currentPage - 1), props.currentPage * props.amountPerPage)\n  }\n  if (contacts.length > 0 && contactsPerPage.length === 0) props.setCurrentPage(props.currentPage - 1)\n\n  return (\n    <main className={classes.ContactsBook}>\n      <h1 className={classes.title}>\n        Contacts Book\n      </h1>\n\n      <section className={classes.inner}>\n        <Header amount={contacts.length}/>\n\n        <ContactsList contacts={contactsPerPage}/>\n\n        {\n          contacts.length > props.amountPerPage ? <PaginationList amount={contacts.length}/> : null\n        }\n      </section>\n\n      <CSSTransition\n        timeout={1000}\n        in={props.isForm}\n        mountOnEnter\n        unmountOnExit\n        classNames='fade'\n      >\n        <BackDrop/>\n      </CSSTransition>\n\n      <CSSTransition\n        timeout={1000}\n        in={props.isForm}\n        mountOnEnter\n        unmountOnExit\n        classNames='jumping'\n      >\n        <ContactForm/>\n      </CSSTransition>\n    </main>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    contacts: state.contacts,\n    isForm: state.isForm,\n    currentPage: state.currentPage,\n    amountPerPage: state.amountPerPage,\n    search: state.search,\n    typeOfContacts: state.typeOfContacts\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchContacts: () => dispatch(fetchContacts()),\n    setCurrentPage: (number) => dispatch(setCurrentPage(number))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsBook)","import React from 'react'\nimport ContactsBook from './containers/ContactsBook/ContactsBook'\n\nfunction App() {\n  return (\n    <ContactsBook/>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  SET_CONTACTS,\n  SET_CURRENT_PAGE,\n  SET_EDITABLE_CONTACT_ID,\n  SET_FORM_CONTROLS,\n  SET_FORM_STATE,\n  SET_PER_PAGE_AMOUNT,\n  SET_PER_PAGE_STATE,\n  SET_SEARCH,\n  SET_TYPE_OF_CONTACTS\n} from './actionsTypes'\nimport {fillFormControls} from '../functions'\n\nconst initialState = {\n  currentPage: 1,\n  amountPerPage: 6,\n  contacts: [],\n  typeOfContacts: 'All contacts',\n  formControls: fillFormControls(),\n  editableContactId: null,\n  isForm: false,\n  search: '',\n  perPage: false,\n  loading: false,\n  error: null\n}\n\nexport function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_PER_PAGE_AMOUNT:\n      return {...state, amountPerPage: action.number}\n    case SET_PER_PAGE_STATE:\n      return {...state, perPage: action.state}\n    case SET_SEARCH:\n      return {...state, search: action.value}\n    case SET_EDITABLE_CONTACT_ID:\n      return {...state, editableContactId: action.id}\n    case SET_FORM_CONTROLS:\n      return {...state, formControls: action.controls}\n    case SET_FORM_STATE:\n      return {...state, isForm: action.state}\n    case SET_TYPE_OF_CONTACTS:\n      return {...state, typeOfContacts: action.payload}\n    case SET_CURRENT_PAGE:\n      return {...state, currentPage: action.number}\n    case SET_CONTACTS:\n      return {...state, contacts: action.contacts}\n    default:\n      return state\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'normalize.css'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport {Provider} from 'react-redux'\nimport {applyMiddleware, compose, createStore} from 'redux'\nimport {reducer} from './store/reducer'\nimport thunk from 'redux-thunk'\nimport './animations.scss'\n\nconst composeEnhancers = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n  : compose\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)))\n\nconst app = <Provider store={store}>\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>\n</Provider>\n\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}