{"version":3,"sources":["components/SearchInput/SearchInput.module.scss","components/Input/Input.module.scss","components/ContactCard/ContactOption/ContactOption.module.scss","components/FavouriteButton/FavouriteButton.module.scss","components/Header/Header.module.scss","components/Button/Button.module.scss","components/ContactForm/ContactForm.module.scss","containers/ContactsBook/ContactsBook.module.scss","components/TableCell/TableCell.module.scss","components/PaginationList/PaginationList.module.scss","components/BackDrop/BackDrop.module.scss","components/ContactCard/ContactCard.module.scss","components/ContactCard/Avatar/Avatar.module.scss","components/RemoveButton/RemoveButton.module.scss","components/ContactsList/ContactsList.module.scss","components/PerPage/PerPage.module.scss","store/actionsTypes.js","functions.js","store/actionCreator.js","components/Button/Button.js","components/SearchInput/SearchInput.js","components/PerPage/PerPage.js","components/Header/Header.js","components/PaginationList/PaginationList.js","components/BackDrop/BackDrop.js","components/Input/Input.js","components/ContactForm/ContactForm.js","components/TableCell/TableCell.js","components/ContactCard/Avatar/Avatar.js","components/ContactCard/ContactOption/ContactOption.js","components/ContactCard/ContactInfo/ContactInfo.js","components/ContactCard/Address/Address.js","components/ContactCard/Phone/Phone.js","components/ContactCard/Company/Company.js","components/RemoveButton/RemoveButton.js","components/FavouriteButton/FavouriteButton.js","components/ContactButtons/ContactButtons.js","components/ContactCard/ContactCard.js","components/ContactsList/ContactsList.js","containers/ContactsBook/ContactsBook.js","App.js","reportWebVitals.js","store/reducer.js","index.js"],"names":["module","exports","SET_CONTACTS","SET_CURRENT_PAGE","SET_TYPE_OF_CONTACTS","SET_FORM_STATE","SET_FORM_CONTROLS","SET_EDITABLE_CONTACT_ID","SET_SEARCH","SET_PER_PAGE_STATE","SET_PER_PAGE_AMOUNT","labels","fillFormControls","map","label","index","id","value","isValid","touched","getRandom","min","max","Math","floor","random","avatars","setContacts","contacts","type","updateContacts","item","dispatch","localStorage","setItem","JSON","stringify","setCurrentPage","number","setFormState","state","setFormControls","controls","setEditableContactId","Button","props","cls","classes","block","push","active","className","join","onClick","disabled","children","connect","search","setSearch","SearchInput","wrapper","magnifier","button","icon","faSearch","input","placeholder","onChange","e","target","times","faTimes","perPages","perPage","amountPerPage","setPerPageState","setPerPageAmount","ref","useRef","condition","fn","useEffect","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","useOutsideAlerter","PerPage","text","faChevronDown","arrow","open","CSSTransition","in","timeout","classNames","mountOnEnter","unmountOnExit","dropdown","list","buttons","typeOfContacts","setTypeOfContacts","payload","Header","isActive","found","amount","faPlus","addButton","currentPage","window","scrollTo","top","behavior","pagination","ceil","i","PaginationList","numbers","faArrowRight","clearFormControls","BackDrop","stopPropagation","setTimeout","formControls","changeInput","newControls","newControl","isError","invalid","Input","error","editableContactId","editContact","newContacts","parse","getItem","find","contact","indexOf","company","address","avatar","length","name","hasFormEmptyFields","some","control","ContactForm","title","form","action","TableCell","header","Avatar","image","width","height","src","alt","ContactOption","description","isLink","href","email","phone","link","options","ContactInfo","option","Address","Phone","Company","removeContact","filter","faTrashAlt","toggleFavourite","newCurrent","favorite","FavouriteButton","favourite","fasStar","notFavourite","common","farStar","gold","ContactButtons","fillFormControlsFromCard","ContactCard","username","city","zipcode","ContactsList","TransitionGroup","component","noContacts","isForm","fetchContacts","a","contactsFromStorage","axios","get","response","contactsWithAvatar","data","console","log","contactsPerPage","toLowerCase","includes","slice","ContactsBook","inner","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","loading","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","StrictMode","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4cc6d7cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchInput\":\"SearchInput_SearchInput__2TIJE\",\"wrapper\":\"SearchInput_wrapper__1CLej\",\"input\":\"SearchInput_input__3e0KX\",\"button\":\"SearchInput_button__1jPlX\",\"times\":\"SearchInput_times__2Wvz7\",\"magnifier\":\"SearchInput_magnifier__3e_CL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2q7wR\",\"label\":\"Input_label__3-3Ew\",\"input\":\"Input_input__23ER3\",\"invalid\":\"Input_invalid__3vava\",\"error\":\"Input_error__12ycj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactOption\":\"ContactOption_ContactOption__1UpJ6\",\"description\":\"ContactOption_description__2fFWd\",\"phone\":\"ContactOption_phone__3_SNJ\",\"company\":\"ContactOption_company__dWjo1\",\"link\":\"ContactOption_link__2Af5A\",\"text\":\"ContactOption_text__2QrRd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FavouriteButton\":\"FavouriteButton_FavouriteButton__3OR5L\",\"favourite\":\"FavouriteButton_favourite__jMWTS\",\"notFavourite\":\"FavouriteButton_notFavourite__3HZEf\",\"common\":\"FavouriteButton_common__16coJ\",\"gold\":\"FavouriteButton_gold__2HDuO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2psce\",\"found\":\"Header_found__1Lvxb\",\"buttons\":\"Header_buttons__1TMqQ\",\"addButton\":\"Header_addButton__2FT7F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2h7F-\",\"roundLeft\":\"Button_roundLeft__3SOaO\",\"roundRight\":\"Button_roundRight__1suRm\",\"active\":\"Button_active__TOg3a\",\"oval\":\"Button_oval__352G7\",\"addContact\":\"Button_addContact__Y1I5i\",\"favourite\":\"Button_favourite__3q7XA\",\"pagination\":\"Button_pagination__15XUA\",\"form\":\"Button_form__3HAXn\",\"nextPage\":\"Button_nextPage__2-JGt\",\"perPage\":\"Button_perPage__3-lIC\",\"begin\":\"Button_begin__B6ngc\",\"end\":\"Button_end__25g9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__1rciW\",\"title\":\"ContactForm_title__2lOrN\",\"text\":\"ContactForm_text__3DJ7j\",\"form\":\"ContactForm_form__36fy_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactsBook\":\"ContactsBook_ContactsBook__1wqih\",\"inner\":\"ContactsBook_inner__1FeZS\",\"title\":\"ContactsBook_title__2JlZS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TableCell\":\"TableCell_TableCell__33HnI\",\"avatar\":\"TableCell_avatar__1bz-T\",\"contactInfo\":\"TableCell_contactInfo__MnJku\",\"address\":\"TableCell_address__12sNk\",\"company\":\"TableCell_company__2AQe1\",\"phone\":\"TableCell_phone__2XcBu\",\"buttons\":\"TableCell_buttons__2ucnj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PaginationList\":\"PaginationList_PaginationList__frulU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"BackDrop_BackDrop__rWFI3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactCard\":\"ContactCard_ContactCard__2sbey\",\"buttons\":\"ContactCard_buttons__3rCTp\",\"button\":\"ContactCard_button__2e8Fp\",\"icon\":\"ContactCard_icon__1X1TL\",\"info\":\"ContactCard_info__NUA2k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"Avatar_image__1H9CK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"RemoveButton_button__3GAEl\",\"shake\":\"RemoveButton_shake__21-qo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noContacts\":\"ContactsList_noContacts__3URvQ\",\"list\":\"ContactsList_list__2SwWT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PerPage\":\"PerPage_PerPage__2VO3r\",\"wrapper\":\"PerPage_wrapper__r2GDw\",\"arrow\":\"PerPage_arrow__17cfr\",\"open\":\"PerPage_open__24UK0\",\"text\":\"PerPage_text__2R9IL\",\"dropdown\":\"PerPage_dropdown__3Awhl\",\"list\":\"PerPage_list__3PyBK\",\"active\":\"PerPage_active__3Sk4X\",\"item\":\"PerPage_item__23bSF\"};","export const SET_CONTACTS = 'SET_CONTACTS'\r\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nexport const SET_TYPE_OF_CONTACTS = 'SET_TYPE_OF_CONTACTS'\r\nexport const SET_FORM_STATE = 'SET_FORM_STATE'\r\nexport const SET_FORM_CONTROLS = 'SET_FORM_CONTROLS'\r\nexport const SET_EDITABLE_CONTACT_ID = 'SET_EDITABLE_CONTACT_ID'\r\nexport const SET_SEARCH = 'SET_SEARCH'\r\nexport const SET_PER_PAGE_STATE = 'SET_PER_PAGE_STATE'\r\nexport const SET_PER_PAGE_AMOUNT = 'SET_PER_PAGE_AMOUNT'","const labels = ['username', 'name', 'email', 'city', 'state', 'zipcode', 'company', 'phone']\r\n\r\nexport function fillFormControls() {\r\n  return labels.map((label, index) => ({\r\n    id: index + 1,\r\n    label: label,\r\n    value: '',\r\n    isValid: false,\r\n    touched: false\r\n  }))\r\n}\r\n\r\nexport const getRandom = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min","import {\r\n  SET_CONTACTS,\r\n  SET_CURRENT_PAGE,\r\n  SET_EDITABLE_CONTACT_ID,\r\n  SET_FORM_CONTROLS,\r\n  SET_FORM_STATE,\r\n  SET_TYPE_OF_CONTACTS,\r\n  SET_SEARCH,\r\n  SET_PER_PAGE_STATE,\r\n  SET_PER_PAGE_AMOUNT\r\n} from './actionsTypes'\r\nimport axios from 'axios'\r\nimport {fillFormControls, getRandom} from '../functions'\r\n\r\nconst avatars = [\r\n  // eslint-disable-next-line no-useless-escape\r\n  \"https:\\/\\/i.imgur.com\\/pYCekqv.jpg\",\r\n  // eslint-disable-next-line no-useless-escape\r\n  \"https:\\/\\/uifaces.co\\/our-content\\/donated\\/wEMibhpA.jpg\",\r\n  // eslint-disable-next-line no-useless-escape\r\n  \"https:\\/\\/images.pexels.com\\/photos\\/432580\\/pexels-photo-432580.jpeg?crop=faces&fit=crop&h=200&w=200&auto=compress&cs=tinysrgb\",\r\n  // eslint-disable-next-line no-useless-escape\r\n  \"https:\\/\\/images.unsplash.com\\/photo-1557296387-5358ad7997bb?ixlib=rb-1.2.1&q=80&fm=jpg&crop=faces&fit=crop&h=200&w=200&ixid=eyJhcHBfaWQiOjE3Nzg0fQ\",\r\n  // eslint-disable-next-line no-useless-escape\r\n  \"https:\\/\\/images.generated.photos\\/fJ8DTPRAgWaRYMOHqYnEsXuJWOvG052PYY7wiIoB4Jg\\/rs:fit:512:512\\/czM6Ly9pY29uczgu\\/Z3Bob3Rvcy1wcm9k\\/LnBob3Rvcy92M18w\\/Mjc4MjkwLmpwZw.jpg\",\r\n  // eslint-disable-next-line no-useless-escape\r\n  \"https:\\/\\/randomuser.me\\/api\\/portraits\\/women\\/16.jpg\",\r\n  // eslint-disable-next-line no-useless-escape\r\n  \"https:\\/\\/uifaces.co\\/our-content\\/donated\\/UCIrofcA.jpg\",\r\n  // eslint-disable-next-line no-useless-escape\r\n  \"https:\\/\\/images.generated.photos\\/60sv5-LVG7C0MoWNy9_tlAPTrO7_D51bT9By6ljIscg\\/rs:fit:512:512\\/czM6Ly9pY29uczgu\\/Z3Bob3Rvcy1wcm9k\\/LnBob3Rvcy92M18w\\/MTY0MjYyLmpwZw.jpg\",\r\n  // eslint-disable-next-line no-useless-escape\r\n  \"https:\\/\\/images.generated.photos\\/ope_mySxrArKmYZ-husaCGy-cn6x9I4QZ3gsatsNYwc\\/rs:fit:512:512\\/czM6Ly9pY29uczgu\\/Z3Bob3Rvcy1wcm9k\\/LnBob3Rvcy92M18w\\/ODI0NjMyLmpwZw.jpg\",\r\n  // eslint-disable-next-line no-useless-escape\r\n  \"https:\\/\\/uifaces.co\\/our-content\\/donated\\/oLkb60i_.jpg\",\r\n  // eslint-disable-next-line no-useless-escape\r\n  \"https:\\/\\/images.unsplash.com\\/photo-1509380836717-c4320ccf1a6f?ixlib=rb-0.3.5&q=80&fm=jpg&crop=faces&fit=crop&h=200&w=200&s=e01c8c45a063daaf6d6e571a32bd6c90\",\r\n  // eslint-disable-next-line no-useless-escape\r\n  \"https:\\/\\/uifaces.co\\/our-content\\/donated\\/9CoYihJ4.jpg\",\r\n  // eslint-disable-next-line no-useless-escape\r\n  \"https:\\/\\/images.generated.photos\\/s8zU0sgzLArBQIwwciNvkiJ_ktS9CrrXyBhwrHC4oiE\\/rs:fit:512:512\\/czM6Ly9pY29uczgu\\/Z3Bob3Rvcy1wcm9k\\/LnBob3Rvcy92M18w\\/MDUwNjE0LmpwZw.jpg\",\r\n  // eslint-disable-next-line no-useless-escape\r\n  \"https:\\/\\/images.generated.photos\\/HeRTU31T6rqkZhQ6JHQUL6BQhYiJ9gu03MeR5R9M_3E\\/rs:fit:512:512\\/czM6Ly9pY29uczgu\\/Z3Bob3Rvcy1wcm9k\\/LnBob3Rvcy92M18w\\/NTE2Nzc1LmpwZw.jpg\",\r\n  // eslint-disable-next-line no-useless-escape\r\n  \"https:\\/\\/i.imgur.com\\/8i14Q3Y.jpg\"\r\n]\r\n\r\nexport function setContacts(contacts) {\r\n  return {\r\n    type: SET_CONTACTS,\r\n    contacts\r\n  }\r\n}\r\n\r\nexport function fetchContacts() {\r\n  return async dispatch => {\r\n    const contactsFromStorage = localStorage.getItem('contacts')\r\n    if (contactsFromStorage) {\r\n      const contacts = JSON.parse(contactsFromStorage)\r\n      dispatch(setContacts(contacts))\r\n    } else {\r\n      try {\r\n        const response = await axios.get('https://demo.sibers.com/users')\r\n        const contactsWithAvatar = response.data.map(item => ({\r\n          ...item,\r\n          avatar: avatars[getRandom(0, 14)]\r\n        }))\r\n        dispatch(updateContacts(contactsWithAvatar))\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function toggleFavourite(contacts, id) {\r\n  return dispatch => {\r\n    const newContacts = [...contacts]\r\n    const current = newContacts.find(item => item.id === id)\r\n    const index = contacts.indexOf(current)\r\n    const newCurrent = {...current}\r\n    newCurrent.favorite = !newCurrent.favorite\r\n    newContacts[index] = newCurrent\r\n    dispatch(updateContacts(newContacts))\r\n  }\r\n}\r\n\r\nexport function removeContact(contacts, id) {\r\n  return dispatch => {\r\n    const newContacts = contacts.filter(contact => contact.id !== id)\r\n    dispatch(updateContacts(newContacts))\r\n  }\r\n}\r\n\r\nexport function updateContacts(item) {\r\n  return dispatch => {\r\n    localStorage.setItem('contacts', JSON.stringify(item))\r\n    dispatch(setContacts(item))\r\n  }\r\n}\r\n\r\nexport function setCurrentPage(number) {\r\n  return {\r\n    type: SET_CURRENT_PAGE,\r\n    number\r\n  }\r\n}\r\n\r\nexport function setTypeOfContacts(type) {\r\n  return {\r\n    type: SET_TYPE_OF_CONTACTS,\r\n    payload: type\r\n  }\r\n}\r\n\r\nexport function setFormState(state) {\r\n  return {\r\n    type: SET_FORM_STATE,\r\n    state\r\n  }\r\n}\r\n\r\nexport function setFormControls(controls) {\r\n  return {\r\n    type: SET_FORM_CONTROLS,\r\n    controls\r\n  }\r\n}\r\n\r\nexport function changeInput(e, controls, index) {\r\n  return dispatch => {\r\n    const newControls = [...controls]\r\n    const newControl = {...newControls[index]}\r\n    newControl.touched = true\r\n    newControl.isValid = e.target.value !== ''\r\n    newControl.value = e.target.value\r\n    newControls[index] = newControl\r\n    dispatch(setFormControls(newControls))\r\n  }\r\n}\r\n\r\nexport function fillFormControlsFromCard(controls, contact) {\r\n  return dispatch => {\r\n    const newControls = [...controls]\r\n    for (let i = 0; i < controls.length; i++) {\r\n      const newControl = {...newControls[i]}\r\n      newControl.value = contact[newControl.label]\r\n      newControls[i] = newControl\r\n    }\r\n    dispatch(setFormControls(newControls))\r\n    dispatch(setEditableContactId(contact.id))\r\n    dispatch(setFormState(true))\r\n  }\r\n}\r\n\r\nexport function setEditableContactId(id) {\r\n  return {\r\n    type: SET_EDITABLE_CONTACT_ID,\r\n    id\r\n  }\r\n}\r\n\r\nexport function editContact(controls, id) {\r\n  return dispatch => {\r\n    let current, index\r\n    const newContacts = JSON.parse(localStorage.getItem('contacts'))\r\n    if (id !== null) {\r\n      current = newContacts.find(contact => contact.id === id)\r\n      index = newContacts.indexOf(current)\r\n    } else {\r\n      current = {}\r\n      current.company = {}\r\n      current.address = {}\r\n      current.avatar = avatars[getRandom(0, 14)]\r\n      index = newContacts.length\r\n      current.id = index\r\n    }\r\n    for (let i = 0; i < controls.length; i++) {\r\n      if (controls[i].label !== 'company' && controls[i].label !== 'city' && controls[i].label !== 'state' && controls[i].label !== 'zipcode') {\r\n        current[controls[i].label] = controls[i].value\r\n      } else {\r\n        if (controls[i].label === 'company') {\r\n          current['company'].name = controls[i].value\r\n        } else {\r\n          current['address'][controls[i].label] = controls[i].value\r\n        }\r\n      }\r\n    }\r\n    newContacts[index] = current\r\n    dispatch(updateContacts(newContacts))\r\n    dispatch(setFormState(false))\r\n  }\r\n}\r\n\r\nexport function clearFormControls() {\r\n  return dispatch => {\r\n    const newControls = fillFormControls()\r\n    dispatch(setFormControls(newControls))\r\n    dispatch(setEditableContactId(null))\r\n  }\r\n}\r\n\r\nexport function setSearch(value) {\r\n  return {\r\n    type: SET_SEARCH,\r\n    value\r\n  }\r\n}\r\n\r\nexport function setPerPageState(state) {\r\n  return {\r\n    type: SET_PER_PAGE_STATE,\r\n    state: !state\r\n  }\r\n}\r\n\r\nexport function setPerPageAmount(number) {\r\n  return {\r\n    type: SET_PER_PAGE_AMOUNT,\r\n    number\r\n  }\r\n}","import React from 'react'\r\nimport classes from './Button.module.scss'\r\n\r\nexport const Button = props => {\r\n  const cls = [classes.Button]\r\n  if (props.block) cls.push(classes[props.block])\r\n  if (props.type) cls.push(classes[props.type])\r\n  if (props.active) cls.push(classes.active)\r\n  return (\r\n    <button\r\n      className={cls.join(' ')}\r\n      type='button'\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  )\r\n}","import React from 'react'\r\nimport classes from './SearchInput.module.scss'\r\nimport {connect} from 'react-redux'\r\nimport {faTimes, faSearch} from '@fortawesome/free-solid-svg-icons'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {setCurrentPage, setSearch} from '../../store/actionCreator'\r\n\r\nconst SearchInput = props => {\r\n  return (\r\n    <div className={classes.SearchInput}>\r\n      <p className={classes.wrapper}>\r\n        <button\r\n          className={`${classes.magnifier} ${classes.button}`}\r\n          disabled\r\n        >\r\n          <FontAwesomeIcon icon={faSearch}/>\r\n        </button>\r\n\r\n        <input\r\n          className={classes.input}\r\n          type=\"text\"\r\n          placeholder='Search contacts...'\r\n          value={props.search}\r\n          onChange={e => {\r\n            props.setSearch(e.target.value)\r\n            props.setCurrentPage(1)\r\n          }}\r\n        />\r\n\r\n        <button\r\n          className={`${classes.times} ${classes.button}`}\r\n          onClick={() => props.setSearch('')}\r\n          disabled={props.search === ''}\r\n        >\r\n          <FontAwesomeIcon icon={faTimes}/>\r\n        </button>\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    search: state.search\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setSearch: (value) => dispatch(setSearch(value)),\r\n    setCurrentPage: (number) => dispatch(setCurrentPage(number))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchInput)","import React, {useEffect, useRef} from 'react'\r\nimport classes from './PerPage.module.scss'\r\nimport {faChevronDown} from '@fortawesome/free-solid-svg-icons'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {connect} from 'react-redux'\r\nimport {setCurrentPage, setPerPageAmount, setPerPageState} from '../../store/actionCreator'\r\nimport {Button} from '../Button/Button'\r\nimport {CSSTransition} from 'react-transition-group'\r\n\r\nconst perPages = [3, 6, 9, 12]\r\n\r\nfunction useOutsideAlerter(ref, condition, fn) {\r\n  useEffect(() => {\r\n    if (condition) {\r\n      function handleClickOutside(event) {\r\n        if (ref.current && !ref.current.contains(event.target)) {\r\n          fn(true)\r\n        }\r\n      }\r\n\r\n      document.addEventListener(\"mousedown\", handleClickOutside)\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", handleClickOutside)\r\n      }\r\n    }\r\n  }, [ref, condition, fn])\r\n}\r\n\r\nconst PerPage = props => {\r\n  const ref = useRef(null)\r\n  useOutsideAlerter(ref, props.perPage, props.setPerPageState)\r\n  return (\r\n    <div className={classes.PerPage}>\r\n      <span className={classes.text}>\r\n        Per page\r\n      </span>\r\n      <div className={classes.wrapper} ref={ref}>\r\n        <Button\r\n          type='perPage'\r\n          onClick={() => props.setPerPageState(props.perPage)}\r\n        >\r\n          {props.amountPerPage}\r\n          <FontAwesomeIcon icon={faChevronDown}\r\n                           className={`${classes.arrow} ${props.perPage ? classes.open : null}`}/>\r\n        </Button>\r\n\r\n        <CSSTransition\r\n          in={props.perPage}\r\n          timeout={1000}\r\n          classNames='dropdown'\r\n          mountOnEnter\r\n          unmountOnExit\r\n        >\r\n          <div className={classes.dropdown}>\r\n            <ul className={classes.list}>\r\n              {\r\n                perPages.map(perPage => (\r\n                  <li\r\n                    key={perPage}\r\n                    className={`${classes.item} ${props.amountPerPage === perPage ? classes.active : null}`}\r\n                    onClick={() => {\r\n                      props.setPerPageAmount(perPage)\r\n                      props.setPerPageState(true)\r\n                      props.setCurrentPage(1)\r\n                    }}\r\n                  >\r\n                    {perPage}\r\n                  </li>\r\n                ))\r\n              }\r\n            </ul>\r\n          </div>\r\n        </CSSTransition>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    perPage: state.perPage,\r\n    amountPerPage: state.amountPerPage\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setPerPageState: (state) => dispatch(setPerPageState(state)),\r\n    setPerPageAmount: (number) => dispatch(setPerPageAmount(number)),\r\n    setCurrentPage: (number) => dispatch(setCurrentPage(number))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PerPage)","import React from 'react'\r\nimport classes from './Header.module.scss'\r\nimport {Button} from '../Button/Button'\r\nimport {connect} from 'react-redux'\r\nimport {setCurrentPage, setFormState, setTypeOfContacts} from '../../store/actionCreator'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faPlus} from '@fortawesome/free-solid-svg-icons'\r\nimport SearchInput from \"../SearchInput/SearchInput\"\r\nimport PerPage from '../PerPage/PerPage'\r\n\r\nconst buttons = [\r\n  {id: 1, type: 'roundLeft', value: 'All contacts'},\r\n  {id: 2, type: 'roundRight', value: 'Favorites'}\r\n]\r\n\r\nconst Header = props => {\r\n  return (\r\n    <header className={classes.Header}>\r\n      <SearchInput/>\r\n\r\n      <div className={classes.buttons}>\r\n        {\r\n          buttons.map(button => {\r\n            const isActive = props.typeOfContacts === button.value\r\n            return (\r\n              <Button\r\n                key={button.id}\r\n                type={button.type}\r\n                active={isActive}\r\n                onClick={() => {\r\n                  props.setTypeOfContacts(button.value)\r\n                  props.setCurrentPage(1)\r\n                }}\r\n                disabled={isActive}\r\n                block='favourite'\r\n              >\r\n                {\r\n                  button.value\r\n                }\r\n              </Button>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n\r\n      <p className={classes.found}>Found {props.amount} contacts </p>\r\n\r\n      <Button\r\n        type='addContact'\r\n        onClick={() => props.setFormState(true)}\r\n      >\r\n        <FontAwesomeIcon icon={faPlus}/>\r\n        <span className={classes.addButton}>\r\n         Add contact\r\n        </span>\r\n      </Button>\r\n\r\n      <PerPage/>\r\n    </header>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    contacts: state.contacts,\r\n    typeOfContacts: state.typeOfContacts\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setTypeOfContacts: (type) => dispatch(setTypeOfContacts(type)),\r\n    setFormState: (state) => dispatch(setFormState(state)),\r\n    setCurrentPage: (number) => dispatch(setCurrentPage(number))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)","import React from 'react'\r\nimport classes from './PaginationList.module.scss'\r\nimport {connect} from 'react-redux'\r\nimport {Button} from '../Button/Button'\r\nimport {setCurrentPage} from '../../store/actionCreator'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faArrowRight} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst PaginationList = props => {\r\n  const pagination = []\r\n  const amount = Math.ceil(props.amount / props.amountPerPage)\r\n  for (let i = props.currentPage - 2; i < props.currentPage + 3; i++) {\r\n    if (i > 0 && i < amount + 1) pagination.push(i)\r\n  }\r\n  return (\r\n    <div className={classes.PaginationList}>\r\n      {\r\n        props.currentPage !== 1 && <Button\r\n          type='oval'\r\n          block='begin'\r\n          onClick={() => props.setCurrentPage(1)}\r\n        >\r\n          To the begin\r\n        </Button>\r\n      }\r\n\r\n      <div className={classes.numbers}>\r\n        {\r\n          pagination.map((number, index) => {\r\n            return <Button\r\n              block='pagination'\r\n              key={index}\r\n              active={props.currentPage === number}\r\n              disabled={props.currentPage === number}\r\n              type={(number === 1 || number === props.currentPage - 2) ? 'roundLeft' : number === amount && props.currentPage === amount ? 'roundRight' : null}\r\n              onClick={() => {\r\n                props.setCurrentPage(number)\r\n              }}\r\n            >\r\n              {number}\r\n            </Button>\r\n          })\r\n        }\r\n\r\n        {\r\n          props.currentPage !== amount && <Button\r\n            type='roundRight'\r\n            block='nextPage'\r\n            onClick={() => props.setCurrentPage(props.currentPage + 1)}\r\n          >\r\n            <FontAwesomeIcon icon={faArrowRight}/>\r\n          </Button>\r\n        }\r\n      </div>\r\n\r\n      {\r\n        props.currentPage !== amount && <Button\r\n          type='oval'\r\n          block='end'\r\n          onClick={() => props.setCurrentPage(amount)}\r\n        >\r\n          To the end\r\n        </Button>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    amountPerPage: state.amountPerPage,\r\n    currentPage: state.currentPage\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setCurrentPage: number => {\r\n      dispatch(setCurrentPage(number))\r\n      window.scrollTo({\r\n        top: 0,\r\n        behavior: \"smooth\"\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PaginationList)","import React from 'react'\r\nimport classes from './BackDrop.module.scss'\r\nimport {connect} from 'react-redux'\r\nimport {clearFormControls, setFormState} from '../../store/actionCreator'\r\n\r\nconst BackDrop = props => {\r\n  return (\r\n    <div\r\n      className={classes.BackDrop}\r\n      onClick={(e) => {\r\n        e.stopPropagation()\r\n        props.setFormState(false)\r\n        setTimeout(() => props.clearFormControls(), 1000)\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setFormState: (state) => dispatch(setFormState(state)),\r\n    clearFormControls: () => dispatch(clearFormControls())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(BackDrop)","import React from 'react'\r\nimport classes from './Input.module.scss'\r\nimport {connect} from 'react-redux'\r\nimport {changeInput} from '../../store/actionCreator'\r\n\r\nconst Input = props => {\r\n  const isError = !props.isValid && props.touched\r\n  const cls = [classes.input]\r\n  if (isError) cls.push(classes.invalid)\r\n  return (\r\n    <div className={classes.Input}>\r\n      <p className={classes.label}>\r\n        {props.label}\r\n      </p>\r\n\r\n      <input\r\n        className={cls.join(' ')}\r\n        type=\"text\"\r\n        placeholder={props.placeholder}\r\n        value={props.value}\r\n        onChange={(e) => props.changeInput(e, props.formControls, props.index)}\r\n      />\r\n\r\n      {\r\n        isError && <span className={classes.error}>\r\n          the field cannot be empty\r\n      </span>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    formControls: state.formControls\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    changeInput: (e, controls, index) => dispatch(changeInput(e, controls, index))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Input)","import React from 'react'\r\nimport classes from './ContactForm.module.scss'\r\nimport {connect} from 'react-redux'\r\nimport Input from '../Input/Input'\r\nimport {Button} from '../Button/Button'\r\nimport {editContact, setFormState} from '../../store/actionCreator'\r\n\r\nconst ContactForm = props => {\r\n  const hasFormEmptyFields = props.formControls.some(control => control.value === '')\r\n  return (\r\n    <section className={classes.ContactForm}>\r\n      <h2 className={classes.title}>\r\n        Contact\r\n      </h2>\r\n\r\n      <p className={classes.text}>\r\n        {\r\n          props.editableContactId !== null\r\n            ? 'Edit contact information'\r\n            : 'Create contact'\r\n        }\r\n      </p>\r\n\r\n      <form className={classes.form} action=\"#\">\r\n        {\r\n          props.formControls.map((control, index) => (\r\n            <Input\r\n              key={control.id}\r\n              label={control.label}\r\n              placeholder={`Enter ${control.label}`}\r\n              value={control.value}\r\n              index={index}\r\n              isValid={control.isValid}\r\n              touched={control.touched}\r\n            />\r\n          ))\r\n        }\r\n\r\n        <Button\r\n          type='oval'\r\n          active\r\n          block='form'\r\n          onClick={() => {\r\n            props.editContact(props.formControls, props.editableContactId)\r\n          }}\r\n          disabled={hasFormEmptyFields}\r\n        >\r\n          Save changes\r\n        </Button>\r\n      </form>\r\n    </section>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    formControls: state.formControls,\r\n    editableContactId: state.editableContactId,\r\n    currentPage: state.currentPage,\r\n    amountPerPage: state.amountPerPage\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    editContact: (controls, id) => dispatch(editContact(controls, id)),\r\n    setFormState: (state) => dispatch(setFormState(state)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm)","import React from 'react'\r\nimport classes from './TableCell.module.scss'\r\n\r\nexport const TableCell = props => {\r\n  const cls = [classes.TableCell]\r\n  if (props.block) cls.push(classes[props.block])\r\n  return (\r\n    <div className={cls.join(' ')}>\r\n      {props.header\r\n        ? <p className={classes.header}>\r\n          {props.header}\r\n        </p>\r\n        : <>\r\n          {props.children}\r\n        </>\r\n      }\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport classes from './Avatar.module.scss'\r\nimport {TableCell} from '../../TableCell/TableCell'\r\n\r\nexport const Avatar = props => {\r\n  return (\r\n    <TableCell block='avatar'>\r\n      <img\r\n        className={classes.image}\r\n        width={150}\r\n        height={150}\r\n        src={props.avatar}\r\n        alt=\"avatar\"\r\n      />\r\n    </TableCell>\r\n  )\r\n}","import React from 'react'\r\nimport classes from './ContactOption.module.scss'\r\n\r\nexport const ContactOption = props => {\r\n  const cls = [classes.ContactOption]\r\n  if (props.type) cls.push(classes[props.type])\r\n  return (\r\n    <p className={cls.join(' ')}>\r\n      <span className={classes.description}>\r\n        {props.description}\r\n      </span>\r\n      {\r\n        props.isLink\r\n          ? <a href={props.email\r\n          ? `mailto:${props.email}`\r\n          : `tel:${props.phone}`}\r\n               className={classes.link}>\r\n            {props.email || props.phone}\r\n          </a>\r\n          : <span className={classes.text}>\r\n            {\r\n              props.text\r\n\r\n            }\r\n            </span>\r\n      }\r\n    </p>\r\n  )\r\n}","import React from 'react'\r\nimport {ContactOption} from '../ContactOption/ContactOption'\r\nimport {TableCell} from '../../TableCell/TableCell'\r\n\r\nconst options = [\r\n  {id: 1, text: 'username'},\r\n  {id: 2, text: 'name'},\r\n  {id: 3, text: 'email', isLink: true}\r\n]\r\n\r\nexport const ContactInfo = props => {\r\n  return (\r\n    <TableCell block='contactInfo'>\r\n      {\r\n        options.map(option => (\r\n          <ContactOption\r\n            key={option.id}\r\n            description={option.text}\r\n            text={props[option.text]}\r\n            email={props.email}\r\n            isLink={option.isLink}\r\n          />\r\n        ))\r\n      }\r\n    </TableCell>\r\n  )\r\n}","import React from 'react'\r\nimport {ContactOption} from '../ContactOption/ContactOption'\r\nimport {TableCell} from '../../TableCell/TableCell'\r\n\r\nconst options = [\r\n  {id: 1, text: 'city'},\r\n  {id: 2, text: 'state'},\r\n  {id: 3, text: 'zipcode'},\r\n]\r\n\r\nexport const Address = props => {\r\n  return (\r\n    <TableCell block='address'>\r\n      {\r\n        options.map(option => (\r\n          <ContactOption\r\n            key={option.id}\r\n            description={option.text}\r\n            text={props[option.text]}\r\n          />\r\n        ))\r\n      }\r\n    </TableCell>\r\n  )\r\n}","import React from 'react'\r\nimport {ContactOption} from '../ContactOption/ContactOption'\r\nimport {TableCell} from '../../TableCell/TableCell'\r\n\r\nexport const Phone = props => {\r\n  return (\r\n    <TableCell block='phone'>\r\n      <ContactOption\r\n        description='Phone'\r\n        phone={props.phone}\r\n        type='phone'\r\n        isLink\r\n      />\r\n    </TableCell>\r\n  )\r\n}","import React from 'react'\r\nimport {ContactOption} from '../ContactOption/ContactOption'\r\nimport {TableCell} from '../../TableCell/TableCell'\r\n\r\nexport const Company = props => {\r\n  return (\r\n    <TableCell block='company'>\r\n      <ContactOption\r\n        description='company'\r\n        text={props.company}\r\n        type='company'\r\n      />\r\n    </TableCell>\r\n  )\r\n}","import React from 'react'\r\nimport classes from './RemoveButton.module.scss'\r\nimport {faTrashAlt} from '@fortawesome/free-solid-svg-icons/faTrashAlt'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {connect} from 'react-redux'\r\nimport {removeContact} from '../../store/actionCreator'\r\n\r\nconst RemoveButton = props => {\r\n  return (\r\n    <button\r\n      className={classes.button}\r\n      onClick={(e) => {\r\n        e.stopPropagation()\r\n        props.removeContact(props.contacts, props.id)\r\n      }}\r\n    >\r\n      <FontAwesomeIcon icon={faTrashAlt}/>\r\n    </button>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    contacts: state.contacts,\r\n    currentPage: state.currentPage,\r\n    amountPerPage: state.amountPerPage\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    removeContact: (contacts, id) => dispatch(removeContact(contacts, id))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RemoveButton)","import React from 'react'\r\nimport classes from './FavouriteButton.module.scss'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faStar as farStar} from '@fortawesome/free-regular-svg-icons'\r\nimport {faStar as fasStar} from '@fortawesome/free-solid-svg-icons'\r\nimport {connect} from 'react-redux'\r\nimport {toggleFavourite} from '../../store/actionCreator'\r\n\r\nconst FavouriteButton = props => {\r\n  const cls = [classes.FavouriteButton]\r\n  if (props.favorite) cls.push(classes.favourite)\r\n  return (\r\n    <button\r\n      className={cls.join(' ')}\r\n      onClick={(e) => {\r\n        e.stopPropagation()\r\n        props.toggleFavourite(props.contacts, props.id)\r\n      }}\r\n    >\r\n      {\r\n        props.favorite\r\n          ? <FontAwesomeIcon icon={fasStar}/>\r\n          : <p className={classes.notFavourite}>\r\n            <span className={classes.common}>\r\n              <FontAwesomeIcon icon={farStar}/>\r\n            </span>\r\n\r\n            <span className={classes.gold}>\r\n              <FontAwesomeIcon icon={fasStar}/>\r\n            </span>\r\n          </p>\r\n      }\r\n    </button>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    contacts: state.contacts\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    toggleFavourite: (contacts, id) => dispatch(toggleFavourite(contacts, id))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FavouriteButton)","import React from 'react'\r\nimport RemoveButton from '../RemoveButton/RemoveButton'\r\nimport {TableCell} from '../TableCell/TableCell'\r\nimport FavouriteButton from '../FavouriteButton/FavouriteButton'\r\n\r\nexport const ContactButtons = props => (\r\n  <TableCell block='buttons'>\r\n    <RemoveButton id={props.id}/>\r\n\r\n    <FavouriteButton\r\n      favorite={props.favorite}\r\n      id={props.id}\r\n    />\r\n  </TableCell>\r\n)","import React from 'react'\r\nimport classes from './ContactCard.module.scss'\r\nimport {Avatar} from './Avatar/Avatar'\r\nimport {ContactInfo} from './ContactInfo/ContactInfo'\r\nimport {Address} from './Address/Address'\r\nimport {Phone} from './Phone/Phone'\r\nimport {Company} from './Company/Company'\r\nimport {ContactButtons} from '../ContactButtons/ContactButtons'\r\nimport {connect} from 'react-redux'\r\nimport {fillFormControlsFromCard} from '../../store/actionCreator'\r\n\r\nconst ContactCard = props => {\r\n  return (\r\n    <article\r\n      className={classes.ContactCard}\r\n      onClick={() => {\r\n        props.fillFormControlsFromCard(props.formControls, props)\r\n      }}\r\n    >\r\n      <Avatar avatar={props.avatar}/>\r\n\r\n      <ContactInfo\r\n        username={props.username}\r\n        name={props.name}\r\n        email={props.email}\r\n      />\r\n\r\n      <Address\r\n        city={props.city}\r\n        state={props.state}\r\n        zipcode={props.zipcode}\r\n      />\r\n\r\n      <Company\r\n        company={props.company}\r\n      />\r\n\r\n      <Phone phone={props.phone}/>\r\n\r\n      <ContactButtons\r\n        favorite={props.favorite}\r\n        id={props.id}\r\n      />\r\n    </article>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    formControls: state.formControls\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fillFormControlsFromCard: (controls, contact) => dispatch(fillFormControlsFromCard(controls, contact))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactCard)","import React from 'react'\r\nimport ContactCard from '../ContactCard/ContactCard'\r\nimport classes from './ContactsList.module.scss'\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group'\r\n\r\nexport const ContactsList = props => {\r\n  return props.contacts.length ?\r\n    <TransitionGroup component='div'>\r\n      {props.contacts.map(contact => {\r\n        const {city, state, zipcode} = contact.address\r\n        return <CSSTransition\r\n          key={contact.id}\r\n          classNames='swipe'\r\n          timeout={1000}\r\n        >\r\n          <ContactCard\r\n            key={contact.id}\r\n            id={contact.id}\r\n            avatar={contact.avatar}\r\n            username={contact.username}\r\n            name={contact.name}\r\n            email={contact.email}\r\n            city={city}\r\n            state={state}\r\n            zipcode={zipcode}\r\n            phone={contact.phone}\r\n            company={contact.company.name}\r\n            favorite={contact.favorite}\r\n          />\r\n        </CSSTransition>\r\n      })}\r\n    </TransitionGroup>\r\n    :\r\n    <div className={classes.noContacts}>\r\n      There are no such contacts\r\n    </div>\r\n}","import React, {useEffect} from 'react'\r\nimport classes from './ContactsBook.module.scss'\r\nimport {connect} from 'react-redux'\r\nimport {fetchContacts, setCurrentPage} from '../../store/actionCreator'\r\nimport Header from '../../components/Header/Header'\r\nimport PaginationList from '../../components/PaginationList/PaginationList'\r\nimport BackDrop from '../../components/BackDrop/BackDrop'\r\nimport ContactForm from '../../components/ContactForm/ContactForm'\r\nimport {CSSTransition} from 'react-transition-group'\r\nimport {ContactsList} from '../../components/ContactsList/ContactsList'\r\n\r\nconst ContactsBook = props => {\r\n  const {fetchContacts} = props\r\n\r\n  useEffect(() => {\r\n    fetchContacts()\r\n  }, [fetchContacts])\r\n\r\n  let contacts = []\r\n  let contactsPerPage = []\r\n\r\n  if (props.contacts.length) {\r\n    if (props.search) {\r\n      contacts = props.contacts.filter(contact => {\r\n        const {username, name, email, phone, company: {name: company}, address: {city, state, zipcode}} = contact\r\n        const values = [username, name, email, phone, company, city, state, zipcode]\r\n        return values.some(item => item.toLowerCase().includes(props.search.toLowerCase())) ? contact : null\r\n      })\r\n    } else {\r\n      contacts = props.contacts\r\n    }\r\n    if (props.typeOfContacts === 'Favorites') {\r\n      contacts = contacts.filter(item => item.favorite)\r\n    }\r\n    contactsPerPage = contacts.slice(props.amountPerPage * (props.currentPage - 1), props.currentPage * props.amountPerPage)\r\n  }\r\n  if (contacts.length > 0 && contactsPerPage.length === 0) props.setCurrentPage(props.currentPage - 1)\r\n\r\n  return (\r\n    <main className={classes.ContactsBook}>\r\n      <h1 className={classes.title}>\r\n        Contacts Book\r\n      </h1>\r\n\r\n      <section className={classes.inner}>\r\n        <Header amount={contacts.length}/>\r\n\r\n        <ContactsList contacts={contactsPerPage}/>\r\n\r\n        {\r\n          contacts.length > props.amountPerPage ? <PaginationList amount={contacts.length}/> : null\r\n        }\r\n      </section>\r\n\r\n      <CSSTransition\r\n        timeout={1000}\r\n        in={props.isForm}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        classNames='fade'\r\n      >\r\n        <BackDrop/>\r\n      </CSSTransition>\r\n\r\n      <CSSTransition\r\n        timeout={1000}\r\n        in={props.isForm}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        classNames='jumping'\r\n      >\r\n        <ContactForm/>\r\n      </CSSTransition>\r\n    </main>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    contacts: state.contacts,\r\n    isForm: state.isForm,\r\n    currentPage: state.currentPage,\r\n    amountPerPage: state.amountPerPage,\r\n    search: state.search,\r\n    typeOfContacts: state.typeOfContacts\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchContacts: () => dispatch(fetchContacts()),\r\n    setCurrentPage: (number) => dispatch(setCurrentPage(number))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsBook)","import React from 'react'\nimport ContactsBook from './containers/ContactsBook/ContactsBook'\n\nfunction App() {\n  return (\n    <ContactsBook/>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  SET_CONTACTS,\r\n  SET_CURRENT_PAGE,\r\n  SET_EDITABLE_CONTACT_ID,\r\n  SET_FORM_CONTROLS,\r\n  SET_FORM_STATE,\r\n  SET_PER_PAGE_AMOUNT,\r\n  SET_PER_PAGE_STATE,\r\n  SET_SEARCH,\r\n  SET_TYPE_OF_CONTACTS\r\n} from './actionsTypes'\r\nimport {fillFormControls} from '../functions'\r\n\r\nconst initialState = {\r\n  currentPage: 1,\r\n  amountPerPage: 6,\r\n  contacts: [],\r\n  typeOfContacts: 'All contacts',\r\n  formControls: fillFormControls(),\r\n  editableContactId: null,\r\n  isForm: false,\r\n  search: '',\r\n  perPage: false,\r\n  loading: false,\r\n  error: null\r\n}\r\n\r\nexport function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_PER_PAGE_AMOUNT:\r\n      return {...state, amountPerPage: action.number}\r\n    case SET_PER_PAGE_STATE:\r\n      return {...state, perPage: action.state}\r\n    case SET_SEARCH:\r\n      return {...state, search: action.value}\r\n    case SET_EDITABLE_CONTACT_ID:\r\n      return {...state, editableContactId: action.id}\r\n    case SET_FORM_CONTROLS:\r\n      return {...state, formControls: action.controls}\r\n    case SET_FORM_STATE:\r\n      return {...state, isForm: action.state}\r\n    case SET_TYPE_OF_CONTACTS:\r\n      return {...state, typeOfContacts: action.payload}\r\n    case SET_CURRENT_PAGE:\r\n      return {...state, currentPage: action.number}\r\n    case SET_CONTACTS:\r\n      return {...state, contacts: action.contacts}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport 'normalize.css'\r\nimport './index.scss'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport {Provider} from 'react-redux'\r\nimport {applyMiddleware, compose, createStore} from 'redux'\r\nimport {reducer} from './store/reducer'\r\nimport thunk from 'redux-thunk'\r\nimport './animations.scss'\r\n\r\nconst composeEnhancers = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n  : compose\r\n\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nconst app = <Provider store={store}>\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>\r\n</Provider>\r\n\r\nReactDOM.render(\r\n  app,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}